;;; Tests of data and control flow

(load "data-and-control-flow/data-and-control-flow.lsp")
(load "data-and-control-flow/places.lsp")
(load "data-and-control-flow/psetq.lsp")
(load "data-and-control-flow/psetf.lsp")
(load "data-and-control-flow/shiftf.lsp")
(load "data-and-control-flow/rotatef.lsp")
(load "data-and-control-flow/return.lsp")
(load "data-and-control-flow/return-from.lsp")
(load "data-and-control-flow/defsetf.lsp")
(load "data-and-control-flow/define-setf-expander.lsp")

(load "data-and-control-flow/and.lsp")
(load "data-and-control-flow/apply.lsp")
(load "data-and-control-flow/block.lsp")
(load "data-and-control-flow/call-arguments-limit.lsp")
(load "data-and-control-flow/case.lsp")
(load "data-and-control-flow/catch.lsp")
(load "data-and-control-flow/ccase.lsp")
(load "data-and-control-flow/compiled-function-p.lsp")
(load "data-and-control-flow/complement.lsp")
(load "data-and-control-flow/cond.lsp")
(load "data-and-control-flow/constantly.lsp")
(load "data-and-control-flow/ctypecase.lsp")
(load "data-and-control-flow/defconstant.lsp")
(load "data-and-control-flow/define-modify-macro.lsp")
(load "data-and-control-flow/defparameter.lsp")
(load "data-and-control-flow/defun.lsp")
(load "data-and-control-flow/defvar.lsp")
(load "data-and-control-flow/destructuring-bind.lsp")
(load "data-and-control-flow/ecase.lsp")
(load "data-and-control-flow/eql.lsp")
(load "data-and-control-flow/equal.lsp")
(load "data-and-control-flow/equalp.lsp")
(load "data-and-control-flow/etypecase.lsp")
(load "data-and-control-flow/every.lsp")
(load "data-and-control-flow/fboundp.lsp")
(load "data-and-control-flow/fdefinition.lsp")
(load "data-and-control-flow/flet.lsp")
(load "data-and-control-flow/fmakunbound.lsp")
(load "data-and-control-flow/funcall.lsp")
(load "data-and-control-flow/function-lambda-expression.lsp")
(load "data-and-control-flow/function.lsp")
(load "data-and-control-flow/functionp.lsp")
(load "data-and-control-flow/get-setf-expansion.lsp")
(load "data-and-control-flow/identity.lsp")
(load "data-and-control-flow/if.lsp")
(load "data-and-control-flow/labels.lsp")
(load "data-and-control-flow/lambda-list-keywords.lsp")
(load "data-and-control-flow/lambda-parameters-limit.lsp")
(load "data-and-control-flow/let.lsp")
(load "data-and-control-flow/letstar.lsp")
(load "data-and-control-flow/macrolet.lsp")
(load "data-and-control-flow/multiple-value-bind.lsp")
(load "data-and-control-flow/multiple-value-call.lsp") ;; include multiple-value-list
(load "data-and-control-flow/multiple-value-prog1.lsp")
(load "data-and-control-flow/multiple-value-setq.lsp")
(load "data-and-control-flow/multiple-value-list.lsp")
(load "data-and-control-flow/nil.lsp")
(load "data-and-control-flow/not-and-null.lsp")
(load "data-and-control-flow/notany.lsp")
(load "data-and-control-flow/notevery.lsp")
(load "data-and-control-flow/nth-value.lsp")
(load "data-and-control-flow/or.lsp")
(load "data-and-control-flow/prog.lsp")
(load "data-and-control-flow/prog1.lsp")
(load "data-and-control-flow/prog2.lsp")
(load "data-and-control-flow/progn.lsp")
(load "data-and-control-flow/progv.lsp")
(load "data-and-control-flow/some.lsp")
(load "data-and-control-flow/t.lsp")
(load "data-and-control-flow/tagbody.lsp")
(load "data-and-control-flow/typecase.lsp")
(load "data-and-control-flow/unless.lsp")
(load "data-and-control-flow/unwind-protect.lsp")
(load "data-and-control-flow/values-list.lsp")
(load "data-and-control-flow/values.lsp")
(load "data-and-control-flow/when.lsp")

#+STARTUP: content
#+TITLE: Resumed report
#+SEQ_TODO: TODO(t) WAITING(w) CURRENT(r) | CANCELLED(c) DONE(d)
#+TAGS: CURRENT(r)

* USAGE
****** These .org files are intended to be used with emacs.
****** In order to FOLD or UNFOLD a list or sublist, use TAB.
****** SHIFT TAB folds/unfolds whole levels.
****** In border to change the state of a task, use C-c C-t.
****** In order to toggle the state of a checklist, use C-c on the checklist.
****** In order to update statistics on the whole file (useful after an automatic update on REPORTS.org), use C-u C-c #.
****** In order to kill an entire subtree, use C-c C-x C-w
****** If you use linum for line numbers, you might want to either disable them, or disable them for org-mode only:
******  add [[https://www.emacswiki.org/emacs/linum-off.el][this]] file to your .emacs.d and then (require 'linum-off) to your init.el
****** In order to update REPORT.org, please check update-report.py

* Milestones
** CURRENT 1 - Multiple values
   - [X] Pass multiple-values tests *Mostly*
     - [X]  See data-and-control-flow folder, multiple-value* tests
   - [ ] Fix changes that were made in order to be able to run the tests
     Depends upon a few functions update to return multiple values (postponed).
*** Caveats:
   - In sum, what was added is a modest implementation of multiple values.
   -  It has a few important differences from the common lisp specification, namely that
      1. it doesn't supply nil values when needed;
      2. it doesn't silently discard exceeding values when required (note that this point, along with the previous one,
         makes this implementation notably less flexible with respect to multiple values);
      3. the rules regarding the passing of multiple values were largely overlooked.
   - However, if a function is defined to return multiple values but is called without the multiple-value apparatus
     (that is, outside of functions or macros built with multiple-value-call), it returns only one value.
     This was thought so that operations like (setq a (floor 4 5)), for instance, which are constantly used,
     wouldn't yield too weird results (or oblige us to keep them single-valued).
   - Another important point is that not all common lisp functions defined as working with multiple values were updated.
     For that reason, prog1 might return multiple values, for instance.
     It seems to be more practical to update each one upon testing its set (so, for instance, update number related
     functions when testing numbers) than to try to do all at once.
   - This implementation might deserve to be rethought at some time.

** TODO 2 - Environment tests
   - [ ] Pass Environment tests
    - [ ] Check out environment folder
** WAITING 3 - Package tests
   - [ ] Pass packages tests
    - [ ] Implement parse-def-macro
    - [ ] //        destructuring-bind
    - [ ] //        defpackage

** CURRENT 4 Arrays
   - [X] Make tests run without crashing (but not necessarily passing)
   - [ ] Solve "Symbol expected in (symbol-value type)"
   - [ ] Define undefined functions/macros
   - [ ] Think about what can be done about the other issues
*** Caveats
    - symbol-value cannot retrieve values from lexical (local) variables.
    - "Symbol expected in (symbol-value type)" (should demand a few changes)
    - (seemingly) scope issues ("unbound variable in ...")
    - The fact that the such as #\x turn into numbers raises some errors
    - The lack of the such as #0ax crashes the tests
    - Undefined variables:
      - fixnum
      - array-total-size-limit
    - Mismatch argument in
      - array-total-size
      - notnot-mv
      - vector-push-extend
    - "Undefined function":
      - adjust-array
      - macrolet
      - array-displacement
      - signals-type-error
      - check-type-error
      - array-element-type
      - array-in-bounds-p
      - check-predicate
      - array-row-major-index
      - array-has-fill-pointer-p
      - check-type-predicate
      - simple-vector-p
      - upgraded-array-element-type
     - Miscellaneous
       - "array index out of range"
       - strange loop error yielding "unbound variable for in".
         remember having seen it before, think it has to do with scoping.

** CURRENT 5 Environment
*** Caveats
    - Type issues ("symbol expected in ...", "symbol expected ...")
    - (seemingly) scope issues ("unbound variable *universe* in ...")
    - A few class issues ("class expected")
    - Dissassemble is undefined (and its tests not run)
    - "Undefined function" errors:
      - search
      - macrolet
      - defpackage
      - short-site-name
      - long-site-name
      - machine-instance
      - machine-type
      - machine-version
      - software-type
      - software-version
      - room
      - usr-homedir-pathname
      - decode-universal-time
      - nth-value ** this one should come with the mv-interface
      - encode-universal-time
      - get-universal-time
      - sleep ** this one is defined as unix:sleep
      - define-compiler-macro
      - defgeneric
      - define-setf-expander
      - define-method-combination
      - deftype

** DONE 6 Misc
*** Caveats
    - "no such package":
      - common-lisp
      - jvm
      - sb-c
    - "no such external symbol":
      - cl:handler-case
      - cl:external
** 6 Printer
*** Caveats
    - Many mismatch arguments in my-with-standard-io-syntax
    - "Undefined functions" or macros:
      - with-standard-io-syntax
      - write-to-string
      - make-print-struct-1
      - check-type-error
      - with-open-stream
      - make-condition
      - code-char
      - print-unreadable-object
      - define-condition
    - "Unbound variable":
      - *universe*
      - *print-radix*
      - *print-escape*
      - *print-gensym*
      - *print-lines*
      - *print-readably*
      - *print-right-margin*
      - *mini-universe*
** CURRENT 7 Numbers
*** Caveats
    - no dividing by zero
    - random does not work with big numbers
    - support for numbers with s in the name (eg 4.0s0)
    - "no such function":
      - integer-decode-float
      - make-condition
      - mask-field
      - byte
      - deposit-field
      - logcount
      - check-type-error
      - ldb-test
      - logorc2
      - parse-integer
      - name-char
      - integer-length
      - realp
      - phase
      - conjugate
      - random-state-p
      - lcm
      - gcd
      - realpart
    - unboudn variable
      - short-float
      - *numbers*
      - *rationals*
      - *reals*
      - *integers* - those, presumably, from some of the non-loaded files
      - most-positive-X
    - lacking types
      - rational
      - boolean
      - support to different floats
** 8 System-construction
*** Caveats
    - Undefined functions
      - compile-file-pathname
      - delete-file
      - fmakunbound
      - with-compilation-unit
    - Unbound variables
      - *compile-file-pathname*
      - *load-truename*
** 9 Streams
*** Caveats
    - Problems with binary vectors tests
    - string expected in (directory wild-pathname)
    - No such keyword :element-type in open
    - Unbound variables
      - *debug-io*
    - Undefined functions
      - check-type-predicate
      - make-echo-stream
      - read-char-no-hang
      - write-char
      - write-string

** 8 Reader
*** Caveats
    - doesn't recognize short float notation
    - Undefined functions
      - read-preserving-whitespace
      - COPY-PPRINT-DISPATCH
      - with-open-stream

** 9 Structures
*** Caveats
    - defstruct-with-tests crashes the tester
    - defstruct* crashes as well  
* Outline
*** Data Types
*** Scope and Extent
*** Type specifiers
*** Program Structure (Forms, Functions, Top-Level Forms)
*** Predicates (Logical Values, Data Type Predicates, Equality Predicates, Logical Operators)
*** Control Structure (Constants and Variables, Generalized Variables, Function Invocation, Simple Sequencing, Establishing New Variable Bindings, Conditions, Blocks and Exists, Iteration, Structure Traversal and Side Effects, Multiple Values, Dynamic Non-Local Exists)
**** eval-and-compile
****  data-and-control-flow
****  iteration
****  conditions
*** Macros
**** environment
*** Declarations
*** Symbols
**** symbols
*** Packages
**** packages
*** Numbers
**** numbers
**** random
*** Characters
**** characters
*** Sequences
**** sequences
*** Lists
**** cons
*** Hash Tables
**** hash-tables
*** Arrays
**** arrays
*** Strings
**** strings
*** Structures
**** structures
*** The Evaluator
*** Streams
****   streams
*** Input/Output
****   printer
****   reader
*** File System Interface
****   pathnames
****   files



* Results


        | Tests-version         | Test-num | Passed | Failure |
        |-----------------------+----------+--------+---------|
        | 1                     |     5557 |   2983 |    2574 |
        |-----------------------+----------+--------+---------|
        | 2 - Add Arrays tests  |     6297 |   3087 |    3210 |
        |-----------------------+----------+--------+---------|
        | 3                     |     7676 |   3489 |    4187 |
        |-----------------------+----------+--------+---------|
        | 4 - Add misc tests    |     8187 |   3506 |    4681 |
        |-----------------------+----------+--------+---------|
        | 5 - Add numbers tests |     9582 |   3988 |    5594 |
        |-----------------------+----------+--------+---------|
        |                       |          |        |         |


;-*- Mode:     Lisp -*-
;;;; Author:   Paul Dietz
;;;; Created:  Mon Mar 24 03:39:09 2003
;;;; Contains: Loader for CLOS-related test files

(compile-and-load "defclass-aux.lsp")
(load "objects/defclass.lsp")
(load "objects/defclass-01.lsp")
(load "objects/defclass-02.lsp")
(load "objects/defclass-03.lsp")
(load "objects/defclass-errors.lsp")
(load "objects/defclass-forward-reference.lsp")
(load "objects/ensure-generic-function.lsp")
(load "objects/allocate-instance.lsp")
(load "objects/reinitialize-instance.lsp")
(load "objects/shared-initialize.lsp")
(load "objects/change-class.lsp")
(load "objects/update-instance-for-different-class.lsp")
(load "objects/slot-boundp.lsp")
(load "objects/slot-exists-p.lsp")
(load "objects/slot-makunbound.lsp")
(load "objects/slot-missing.lsp")
(load "objects/slot-unbound.lsp")
(load "objects/slot-value.lsp")
(load "objects/method-qualifiers.lsp")
(load "objects/no-applicable-method.lsp")
(load "objects/no-next-method.lsp")
(load "objects/remove-method.lsp")
(load "objects/make-instance.lsp")
(load "objects/make-instances-obsolete.lsp")
(load "objects/make-load-form.lsp")
(load "objects/make-load-form-saving-slots.lsp")
(load "objects/with-accessors.lsp")
(load "objects/with-slots.lsp")
(load "objects/defgeneric.lsp")
(load "objects/defgeneric-method-combination-aux.lsp")
(load "objects/defgeneric-method-combination-plus.lsp")
(load "objects/defgeneric-method-combination-append.lsp")
(load "objects/defgeneric-method-combination-nconc.lsp")
(load "objects/defgeneric-method-combination-list.lsp")
(load "objects/defgeneric-method-combination-max.lsp")
(load "objects/defgeneric-method-combination-min.lsp")
(load "objects/defgeneric-method-combination-and.lsp")
(load "objects/defgeneric-method-combination-or.lsp")
(load "objects/defgeneric-method-combination-progn.lsp")
;; (load "objects/defgeneric-method-combination-standard.lsp")
(load "objects/find-class.lsp")
(load "objects/next-method-p.lsp")
(load "objects/call-next-method.lsp")
(load "objects/compute-applicable-methods.lsp")
(load "objects/define-method-combination.lsp")
;; (load "objects/define-method-combination-long-form.lsp")
(load "objects/find-method.lsp")
(load "objects/add-method.lsp")
(load "objects/class-name.lsp")
(load "objects/class-of.lsp")
(load "objects/unbound-slot.lsp")
(load "objects/defmethod.lsp")
